<!doctype html>
<html>
<head>
<title>Visualizing Projections</title>
<link rel="stylesheet" href="main.css"/>
<script type="text/javascript" src="raphael-min.js"></script>
<script type="text/javascript" src="1dscreen.js"></script>
<script type="text/javascript" src="iso2dproj.js"></script>
<script type="text/javascript" src="iso3dproj.js"></script>
<script>
window.addEventListener("load", function() {
  iso3dproj.start("iso3d");
  iso2dproj.start("iso2d");
});
</script>
<style>
div#figure1, div#figure2, div#figure3
{
   background: #F7F7F7;
   width:650;
   height:300px;
   margin: 20px 0;
}
canvas {
   width:650px;
   margin: 20px 0;
}
</style>
</head>

<body>
<div id="container">

<h1>Visualizing Projections</h1>
<p id="author">by <a href="http://twitter.com/shaunlebron">@shaunlebron</a></p>

<p>Everyone knows that a photograph is a 2D image of a 3D world. Take this
spinning cube for example:</p>

<canvas id="iso3d"></canvas>

<p>When the colors of light travel from the object to the camera, they pass
through and mark the photo, creating the colored pixels of the image. You can
imagine the same scenario from a top-down perspective. Incidentally, this is
the same as imagining a 1D image of a 2D object.</p>

<canvas id="iso2d"></canvas>

<p>Our objective is to illustrate projections using this simplified 2D
model.</p>

<h2>The Standard Projection</h2>

<p>The figure below is an interactive version of the previous diagram.  The
colored circles represent the objects being photographed.  The flat line is the
photograph itself.</p>

<p><strong>Try it:</strong> Drag the circles.</p>

<div id="figure1"></div>

<p>This is how all 3D graphics today are rendered to your 2D screen.  It is the
Standard Projection, formally known as the <b>Rectilinear</b> Projection.</p>

<p>Unfortunately, stretching is a nasty side effect of the Standard Projection
when used for <em>wide-angle</em> views, and the angle of view must always be
less than 180&deg;.  To overcome these limitations we can use another
projection.</p>

<h2>The Panorama</h2>

<p>The next figure is a how a <em>panoramic</em> camera takes a picture.  The
film is no longer flat, but spherical or cylindrical.  After the picture is
taken, we unroll it onto a flat frame.  If we use a cylinder, the
projection is formally known as a <b>cylindrical</b> projection.  If we use a sphere,
the projection is the common <b>fisheye</b> lens (formally known as equidistant
azimuthal projection).</p>

<p><strong>Try it:</strong> Drag the circles.</p>

<div id="figure2"></div>

<p>We are able to capture a full 360&deg; range without distortion near the
margins.</p>

<h2>The Hybrid</h2>

<p>The <b>stereographic</b> projection is a combination of the Standard and Panoramic
projections. It combines the range of the Panoramic Projection with the
perspective effects of the Standard Projection (increases the size of the
objects near the periphery).</p>

<p>The stereographic projection requires two cameras.  The centered camera
first projects the image onto the cylinderical or spherical screen, exactly
like before.  But instead of <em>unrolling</em> it onto a flat frame, we use a
second camera to <em>project</em> it onto a flat frame.  This is known as a
<b>Panini</b> projection if we use a cylinder rather than a sphere.</p>

<p><strong>Try it:</strong> Drag the circles.</p>

<div id="figure3"></div>

<h2>Other Projection Methods</h2>

<p>There are hundreds of other projection methods used in cartography and
panoramic photography tools.  The aforementioned projections are perhaps the
most intuitive to visualize.</p>

<h2>Motivation</h2>

<p>This was originally intended as a supplement to
<a href="https://github.com/shaunlebron/blinky">Blinky</a>, a prototype for
trying different projections in a game, where we found the stereographic/Panini
to be the best way to represent our natural wide-angle view.</p>

<p>Creating this illustration actually lead to a 1D game concept,
<a href="https://github.com/shaunlebron/bl1nd-ld28">BL1ND</a>.</p>

<h2>Source Code</h2>

<p><a href="https://github.com/shaunlebron/visualizing-projections">https://github.com/shaunlebron/visualizing-projections</a>

</div>
</body>
</html>
